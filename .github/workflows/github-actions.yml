name: p2h Github Actions CI/CD
run-name: GitHub Actions for p2h
on: [push, workflow_dispatch]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - run: echo "Event ${{ github.event_name }}; Runner ${{ runner.os }}; Branch ${{ github.ref }}; Repository ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Cache deps
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependecies
        run: npm ci
          npm install --save-dev @babel/plugin-proposal-private-property-in-object --legacy-peer-deps
      - name: Test application
        run: npm run test
      - name: Lint application
        run: npm run lint
      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - run: echo "Event ${{ github.event_name }}; Runner ${{ runner.os }}; Branch ${{ github.ref }}; Repository ${{ github.repository }}."
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Cache deps
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: node-modules-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependecies
        run: npm ci
          npm install --save-dev @babel/plugin-proposal-private-property-in-object --legacy-peer-deps
      - name: Build application
        run: npm run build
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          path: build
          name: build-files

  deploy:
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    needs: build
    steps:
      - run: echo "Event ${{ github.event_name }}; Runner ${{ runner.os }}; Branch ${{ github.ref }}; Repository ${{ github.repository }}."
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 